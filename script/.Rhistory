breaks = breaks, col = my.pal, nclass = 9 , border = "antiquewhite3", add = TRUE)
layoutLayer(title = "Surface maïs doux", author = "Arvalis 2020", sources = "Questionnaire", horiz = FALSE,
posscale = "bottomleft", theme = "kaki.pal")
plot(fondRegion, col = "antiquewhite1", border= "white", add = TRUE)
ghostLayer(dataf, bg = "lightblue1")
plot(fondRegion, col = "antiquewhite1", border= "white", add = TRUE)
fondRegion
plot(fondRegion, col = "antiquewhite1", border= "white", add = TRUE)
plot(fondRegion, col = "antiquewhite1", border= "white")
ghostLayer(fondRegion, bg = "lightblue1")
plot(fond, col = "antiquewhite1", border = "white", add = TRUE)
plot(fondRegion, col = "antiquewhite1", border= "white")
ghostLayer(dataf, bg = "lightblue1")
plot(fondRegion, col = "antiquewhite1", border= "white", add = TRUE)
plot(dataf$geom, col = "antiquewhite2", border = NA,add = TRUE)
ghostLayer(dataf, bg = "lightblue1")
plot(fond, col = "antiquewhite1", border = "white", add = TRUE)
st_crs(fond)
fond <- st_transform(fond, 4326)
st_crs(fond)
fond <- st_transform(fond, 2154)
st_crs(fond)
st_crs(fondRegion)
st_crs(fond)
st_crs(fondRegion)
fondRegion <- st_transform(fondRegion,2154)
st_crs(fondRegion)
fond <- st_transform(fond, 2154)
st_crs(fond)
fondRegion <- st_transform(fondRegion,2154)
st_crs(fondRegion)
ghostLayer(dataf, bg = "lightblue1")
st_crs(dataf)
st_crs(dataf)
dataf <- st_transform(dataf,2154)
ghostLayer(dataf, bg = "lightblue1")
plot(fond, col = "antiquewhite1", border = "white", add = TRUE)
st_crs(fond)
plot(fondRegion, col = "antiquewhite1", border= "white", add = TRUE)
plot(dataf$geom, col = "antiquewhite2", border = NA,add = TRUE)
choroLayer(dataf, var = "SURFACE",
legend.title.txt = "Surface (ha)", legend.pos = "topright",
breaks = breaks, col = my.pal, nclass = 9 , border = "antiquewhite3", add = TRUE)
layoutLayer(title = "Surface maïs doux", author = "Arvalis 2020", sources = "Questionnaire", horiz = FALSE,
posscale = "bottomleft", theme = "kaki.pal")
png("../img/maisdoux.png", height = sizes [2], width = sizes [1], res = 500)
par(mar = c(0,0,1.2,0))
my.pal <- carto.pal("kaki.pal", 8)
ghostLayer(dataf, bg = "lightblue1")
plot(fond, col = "antiquewhite1", border = "white", add = TRUE)
st_crs(fond)
plot(fondRegion, col = "antiquewhite1", border= "white", add = TRUE)
fondRegion
plot(dataf$geom, col = "antiquewhite2", border = NA,add = TRUE)
choroLayer(dataf, var = "SURFACE",
legend.title.txt = "Surface (ha)", legend.pos = "topright",
breaks = breaks, col = my.pal, nclass = 9 , border = "antiquewhite3", add = TRUE)
layoutLayer(title = "Surface maïs doux", author = "Arvalis 2020", sources = "Questionnaire", horiz = FALSE,
posscale = "bottomleft", theme = "kaki.pal")
dev.off()
breaks <- c(0,100, 250,500,750,1000,2000,3000,5000)
sizes <- getFigDim(x = dataf, width = 3000, mar = c(0,0,1.2,0), res = 500)
png("../img/maisdoux.png", height = sizes [2], width = sizes [1], res = 500)
par(mar = c(0,0,1.2,0))
my.pal <- carto.pal("kaki.pal", 8)
ghostLayer(dataf, bg = "lightblue1")
plot(fond, col = "antiquewhite1", border = "white", add = TRUE)
plot(fondRegion, col = "antiquewhite1", border= "white",lwd = 2, add = TRUE)
plot(dataf$geom, col = "antiquewhite2", border = NA,add = TRUE)
choroLayer(dataf, var = "SURFACE",
legend.title.txt = "Surface (ha)", legend.pos = "topright",
breaks = breaks, col = my.pal, nclass = 9 , border = "antiquewhite3", add = TRUE)
layoutLayer(title = "Surface maïs doux", author = "Arvalis 2020", sources = "Questionnaire", horiz = FALSE,
posscale = "bottomleft", theme = "kaki.pal")
dev.off()
breaks <- c(0,100, 250,500,750,1000,2000,3000,5000)
sizes <- getFigDim(x = dataf, width = 3000, mar = c(0,0,1.2,0), res = 500)
png("../img/maisdoux.png", height = sizes [2], width = sizes [1], res = 500)
par(mar = c(0,0,1.2,0))
my.pal <- carto.pal("kaki.pal", 8)
ghostLayer(dataf, bg = "lightblue1")
plot(fond, col = "antiquewhite1", border = "white", add = TRUE)
plot(fondRegion, col = "antiquewhite1", border= "grey",lwd = 2, add = TRUE)
plot(dataf$geom, col = "antiquewhite2", border = NA,add = TRUE)
choroLayer(dataf, var = "SURFACE",
legend.title.txt = "Surface (ha)", legend.pos = "topright",
breaks = breaks, col = my.pal, nclass = 9 , border = "antiquewhite3", add = TRUE)
layoutLayer(title = "Surface maïs doux", author = "Arvalis 2020", sources = "Questionnaire", horiz = FALSE,
posscale = "bottomleft", theme = "kaki.pal")
dev.off()
breaks <- c(0,100, 250,500,750,1000,2000,3000,5000)
sizes <- getFigDim(x = dataf, width = 3000, mar = c(0,0,1.2,0), res = 600)
png("../img/maisdoux.png", height = sizes [2], width = sizes [1], res = 600)
par(mar = c(0,0,1.2,0))
my.pal <- carto.pal("kaki.pal", 8)
ghostLayer(dataf, bg = "lightblue1")
plot(fond, col = "antiquewhite1", border = "white", add = TRUE)
plot(fondRegion, col = "antiquewhite1", border= "grey",lwd = 2, add = TRUE)
plot(dataf$geom, col = "antiquewhite2", border = NA,add = TRUE)
choroLayer(dataf, var = "SURFACE",
legend.title.txt = "Surface (ha)", legend.pos = "topright",
breaks = breaks, col = my.pal, nclass = 9 , border = "antiquewhite3", add = TRUE)
layoutLayer(title = "Surface maïs doux", author = "Arvalis 2020", sources = "Questionnaire", horiz = FALSE,
posscale = "bottomleft", theme = "kaki.pal")
dev.off()
breaks <- c(0,100, 250,500,750,1000,2000,3000,5000)
sizes <- getFigDim(x = dataf, width = 3000, mar = c(0,0,1.2,0), res = 400)
png("../img/maisdoux.png", height = sizes [2], width = sizes [1], res = 400)
par(mar = c(0,0,1.2,0))
my.pal <- carto.pal("kaki.pal", 8)
ghostLayer(dataf, bg = "lightblue1")
plot(fond, col = "antiquewhite1", border = "white", add = TRUE)
plot(fondRegion, col = "antiquewhite1", border= "grey",lwd = 2, add = TRUE)
plot(dataf$geom, col = "antiquewhite2", border = NA,add = TRUE)
choroLayer(dataf, var = "SURFACE",
legend.title.txt = "Surface (ha)", legend.pos = "topright",
breaks = breaks, col = my.pal, nclass = 9 , border = "antiquewhite3", add = TRUE)
layoutLayer(title = "Surface maïs doux", author = "Arvalis 2020", sources = "Questionnaire", horiz = FALSE,
posscale = "bottomleft", theme = "kaki.pal")
dev.off()
fondRegion$NOM_REG
sel <- fondRegion [fondRegion$NOM_REG %in% c("NOUVELLE-AQUITAINE", "OCCITANIE"),]
sel <- fondRegion [fondRegion$NOM_REG %in% c("NOUVELLE-AQUITAINE", "OCCITANIE"),]
ghostLayer(sel, bg = "lightblue1")
plot(fond, col = "antiquewhite1", border = "white", add = TRUE)
plot(fondRegion, col = "antiquewhite1", border= "grey",lwd = 2, add = TRUE)
plot(dataf$geom, col = "antiquewhite2", border = NA,add = TRUE)
choroLayer(dataf, var = "SURFACE",
legend.title.txt = "Surface (ha)", legend.pos = "topright",
breaks = breaks, col = my.pal, nclass = 9 , border = "antiquewhite3", add = TRUE)
layoutLayer(title = "Surface maïs doux", author = "Arvalis 2020", sources = "Questionnaire", horiz = FALSE,
posscale = "bottomleft", theme = "kaki.pal")
breaks <- c(0,100, 250,500,750,1000,2000,3000,5000)
sizes <- getFigDim(x = dataf, width = 3000, mar = c(0,0,1.2,0), res = 400)
png("../img/maisdoux.png", height = sizes [2], width = sizes [1], res = 400)
par(mar = c(0,0,1.2,0))
my.pal <- carto.pal("kaki.pal", 8)
sel <- fondRegion [fondRegion$NOM_REG %in% c("NOUVELLE-AQUITAINE", "OCCITANIE"),]
ghostLayer(sel, bg = "lightblue1")
plot(fond, col = "antiquewhite1", border = "white", add = TRUE)
plot(fondRegion, col = "antiquewhite1", border= "grey",lwd = 2, add = TRUE)
plot(dataf$geom, col = "antiquewhite2", border = NA,add = TRUE)
choroLayer(dataf, var = "SURFACE",
legend.title.txt = "Surface (ha)", legend.pos = "topright",
breaks = breaks, col = my.pal, nclass = 9 , border = "antiquewhite3", add = TRUE)
layoutLayer(title = "Surface maïs doux", author = "Arvalis 2020", sources = "Questionnaire", horiz = FALSE,
posscale = "bottomleft", theme = "kaki.pal")
dev.off()
breaks <- c(0,100, 250,500,750,1000,2000,3000,5000)
sizes <- getFigDim(x = dataf, width = 3000, mar = c(0,0,1.2,0), res = 400)
png("../img/maisdoux.png", height = sizes [2], width = sizes [1], res = 400)
par(mar = c(0,0,1.2,0))
my.pal <- carto.pal("kaki.pal", 8)
sel <- fondRegion [fondRegion$NOM_REG %in% c("NOUVELLE-AQUITAINE", "OCCITANIE"),]
ghostLayer(sel, bg = "lightblue1")
plot(fond, col = "antiquewhite1", border = "white", add = TRUE)
plot(fondRegion, col = "antiquewhite2", border= "grey",lwd = 1, add = TRUE)
plot(dataf$geom, col = "antiquewhite3", border = NA,add = TRUE)
choroLayer(dataf, var = "SURFACE",
legend.title.txt = "Surface (ha)", legend.pos = "topright",
breaks = breaks, col = my.pal, nclass = 9 , border = NA, add = TRUE)
layoutLayer(title = "Surface maïs doux", author = "Arvalis 2020", sources = "Questionnaire", horiz = FALSE,
posscale = "bottomleft", theme = "kaki.pal")
dev.off()
breaks <- c(0,100, 250,500,750,1000,2000,3000,5000)
sizes <- getFigDim(x = dataf, width = 3000, mar = c(0,0,1.2,0), res = 400)
png("../img/maisdoux.png", height = sizes [2], width = sizes [1], res = 400)
par(mar = c(0,0,1.2,0))
my.pal <- carto.pal("kaki.pal", 8)
sel <- fondRegion [fondRegion$NOM_REG %in% c("NOUVELLE-AQUITAINE", "OCCITANIE"),]
ghostLayer(sel, bg = "lightblue1")
plot(fond, col = "antiquewhite1", border = "white", add = TRUE)
plot(fondRegion, col = "antiquewhite2", border= "grey",lwd = 1, add = TRUE)
choroLayer(dataf, var = "SURFACE",
legend.title.txt = "Surface (ha)", legend.pos = "topright",
breaks = breaks, col = my.pal, nclass = 9 , border = NA, add = TRUE)
layoutLayer(title = "Surface maïs doux", author = "Arvalis 2020", sources = "Questionnaire", horiz = FALSE,
posscale = "bottomleft", theme = "kaki.pal")
dev.off()
breaks <- c(0,100, 250,500,750,1000,2000,3000,5000)
sizes <- getFigDim(x = dataf, width = 3000, mar = c(0,0,1.2,0), res = 400)
png("../img/maisdoux.png", height = sizes [2], width = sizes [1], res = 400)
par(mar = c(0,0,1.2,0))
my.pal <- carto.pal("kaki.pal", 8)
sel <- fondRegion [fondRegion$NOM_REG %in% c("NOUVELLE-AQUITAINE", "OCCITANIE"),]
ghostLayer(dataf, bg = "lightblue1")
plot(fond, col = "antiquewhite1", border = "white", add = TRUE)
plot(fondRegion, col = "antiquewhite2", border= "grey",lwd = 1, add = TRUE)
choroLayer(dataf, var = "SURFACE",
legend.title.txt = "Surface (ha)", legend.pos = "topright",
breaks = breaks, col = my.pal, nclass = 9 , border = NA, add = TRUE)
layoutLayer(title = "Surface maïs doux", author = "Arvalis 2020", sources = "Questionnaire", horiz = FALSE,
posscale = "bottomleft", theme = "kaki.pal")
dev.off()
breaks <- c(0,100, 250,500,750,1000,2000,3000,5000)
sizes <- getFigDim(x = dataf, width = 3000, mar = c(0,0,1.2,1), res = 400)
png("../img/maisdoux.png", height = sizes [2], width = sizes [1], res = 400)
par(mar = c(0,0,1.2,0))
my.pal <- carto.pal("kaki.pal", 8)
sel <- fondRegion [fondRegion$NOM_REG %in% c("NOUVELLE-AQUITAINE", "OCCITANIE"),]
ghostLayer(dataf, bg = "lightblue1")
plot(fond, col = "antiquewhite1", border = "white", add = TRUE)
plot(fondRegion, col = "antiquewhite2", border= "grey",lwd = 1, add = TRUE)
choroLayer(dataf, var = "SURFACE",
legend.title.txt = "Surface (ha)", legend.pos = "topright",
breaks = breaks, col = my.pal, nclass = 9 , border = NA, add = TRUE)
layoutLayer(title = "Surface maïs doux", author = "Arvalis 2020", sources = "Questionnaire", horiz = FALSE,
posscale = "bottomleft", theme = "kaki.pal")
dev.off()
breaks <- c(0,100, 250,500,750,1000,2000,3000,5000)
sizes <- getFigDim(x = dataf, width = 3000, mar = c(0,0,1.2,2), res = 400)
png("../img/maisdoux.png", height = sizes [2], width = sizes [1], res = 400)
par(mar = c(0,0,1.2,0))
my.pal <- carto.pal("kaki.pal", 8)
sel <- fondRegion [fondRegion$NOM_REG %in% c("NOUVELLE-AQUITAINE", "OCCITANIE"),]
ghostLayer(dataf, bg = "lightblue1")
plot(fond, col = "antiquewhite1", border = "white", add = TRUE)
plot(fondRegion, col = "antiquewhite2", border= "grey",lwd = 1, add = TRUE)
choroLayer(dataf, var = "SURFACE",
legend.title.txt = "Surface (ha)", legend.pos = "topright",
breaks = breaks, col = my.pal, nclass = 9 , border = NA, add = TRUE)
layoutLayer(title = "Surface maïs doux", author = "Arvalis 2020", sources = "Questionnaire", horiz = FALSE,
posscale = "bottomleft", theme = "kaki.pal")
dev.off()
breaks <- c(0,100, 250,500,750,1000,2000,3000,5000)
sizes <- getFigDim(x = dataf, width = 3000, mar = c(0,0,1.2,2), res = 400)
png("../img/maisdoux.png", height = sizes [2], width = sizes [1], res = 400)
par(mar = c(0,0,1.2,2))
my.pal <- carto.pal("kaki.pal", 8)
sel <- fondRegion [fondRegion$NOM_REG %in% c("NOUVELLE-AQUITAINE", "OCCITANIE"),]
ghostLayer(dataf, bg = "lightblue1")
plot(fond, col = "antiquewhite1", border = "white", add = TRUE)
plot(fondRegion, col = "antiquewhite2", border= "grey",lwd = 1, add = TRUE)
choroLayer(dataf, var = "SURFACE",
legend.title.txt = "Surface (ha)", legend.pos = "topright",
breaks = breaks, col = my.pal, nclass = 9 , border = NA, add = TRUE)
layoutLayer(title = "Surface maïs doux", author = "Arvalis 2020", sources = "Questionnaire", horiz = FALSE,
posscale = "bottomleft", theme = "kaki.pal")
dev.off()
breaks <- c(0,100, 250,500,750,1000,2000,3000,5000)
sizes <- getFigDim(x = dataf, width = 3000, mar = c(0,1,1.2,1), res = 400)
png("../img/maisdoux.png", height = sizes [2], width = sizes [1], res = 400)
par(mar = c(0,1.2,1))
my.pal <- carto.pal("kaki.pal", 8)
sel <- fondRegion [fondRegion$NOM_REG %in% c("NOUVELLE-AQUITAINE", "OCCITANIE"),]
ghostLayer(dataf, bg = "lightblue1")
plot(fond, col = "antiquewhite1", border = "white", add = TRUE)
plot(fondRegion, col = "antiquewhite2", border= "grey",lwd = 1, add = TRUE)
choroLayer(dataf, var = "SURFACE",
legend.title.txt = "Surface (ha)", legend.pos = "topright",
breaks = breaks, col = my.pal, nclass = 9 , border = NA, add = TRUE)
layoutLayer(title = "Surface maïs doux", author = "Arvalis 2020", sources = "Questionnaire", horiz = FALSE,
posscale = "bottomleft", theme = "kaki.pal")
dev.off()
breaks <- c(0,100, 250,500,750,1000,2000,3000,5000)
sizes <- getFigDim(x = dataf, width = 3000, mar = c(0,1,1.2,1), res = 400)
png("../img/maisdoux.png", height = sizes [2], width = sizes [1], res = 400)
par(mar = c(0,1,1.2,1))
my.pal <- carto.pal("kaki.pal", 8)
sel <- fondRegion [fondRegion$NOM_REG %in% c("NOUVELLE-AQUITAINE", "OCCITANIE"),]
ghostLayer(dataf, bg = "lightblue1")
plot(fond, col = "antiquewhite1", border = "white", add = TRUE)
plot(fondRegion, col = "antiquewhite2", border= "grey",lwd = 1, add = TRUE)
choroLayer(dataf, var = "SURFACE",
legend.title.txt = "Surface (ha)", legend.pos = "topright",
breaks = breaks, col = my.pal, nclass = 9 , border = NA, add = TRUE)
layoutLayer(title = "Surface maïs doux", author = "Arvalis 2020", sources = "Questionnaire", horiz = FALSE,
posscale = "bottomleft", theme = "kaki.pal")
dev.off()
breaks <- c(0,100, 250,500,750,1000,2000,3000,5000)
sizes <- getFigDim(x = dataf, width = 3000, mar = c(1,1,1.2,1), res = 400)
png("../img/maisdoux.png", height = sizes [2], width = sizes [1], res = 400)
par(mar = c(1,1,1.2,1))
my.pal <- carto.pal("kaki.pal", 8)
sel <- fondRegion [fondRegion$NOM_REG %in% c("NOUVELLE-AQUITAINE", "OCCITANIE"),]
ghostLayer(dataf, bg = "lightblue1")
plot(fond, col = "antiquewhite1", border = "white", add = TRUE)
plot(fondRegion, col = "antiquewhite2", border= "grey",lwd = 1, add = TRUE)
choroLayer(dataf, var = "SURFACE",
legend.title.txt = "Surface (ha)", legend.pos = "topright",
breaks = breaks, col = my.pal, nclass = 9 , border = NA, add = TRUE)
layoutLayer(title = "Surface maïs doux", author = "Arvalis 2020", sources = "Questionnaire", horiz = FALSE,
posscale = "bottomleft", theme = "kaki.pal")
dev.off()
mais2019  <- st_read("../dataS/rpg.gpkg", "dataFinale", quiet = TRUE, stringsAsFactors = FALSE)
mais2019 <- mais2019 [!(is.na(mais2019$MID)), c("ID_GEOFLA", "MID")]
names(mais2019) [1:2] <- c("ID_GEOFLA", "Surface")
# attribut code canton = num dpt + num canton a l'air commun
# Mais attention pas identifiant unique !
#205 obs
str(mais2019)
mais2019  <- st_read("../dataS/rpg.gpkg", "dataFinale", quiet = TRUE, stringsAsFactors = FALSE)
mais2019 <- mais2019 [!(is.na(mais2019$MID)), c("ID_GEOFLA", "Code_canton" "MID")]
mais2019 <- mais2019 [!(is.na(mais2019$MID)), c("ID_GEOFLA", "Code_canton" ,"MID")]
mais2019 <- mais2019 [!(is.na(mais2019$MID)), c("ID_GEOFLA", "Code_canto" ,"MID")]
mais2019
str(dataf)
names(mais2019) [1:2] <- c("ID_GEOFLA","ID_CANTON", "Surface")
names(mais2019) [1:3] <- c("ID_GEOFLA","ID_CANTON", "Surface")
unique(mais2019$Code_canton)
unique(mais2019$ID_CANTON)
length(unique(mais2019$ID_CANTON))
tab <- table(mais2019$ID_CANTON)
tab [tab >1]
dataf
unique(dataf$ID_CAN)
length(unique(dataf$ID_CAN))
doub <- names(doublons)
data$ID_CAN [data$ID_CAN %in% doub,]
# aucun des cantons de la data questionnaire dans les doublons du geofla
datafusion <- merge(dataf, mais2019, by = "ID_CANTON")
# aucun des cantons de la data questionnaire dans les doublons du geofla
datafusion <- merge(dataf, mais2019 ["ID_CANTON", "Surface", drop = TRUE], by = "ID_CANTON")
names(mais2019) [1:3] <- c("ID_GEOFLA","ID_CAN", "Surface")
# aucun des cantons de la data questionnaire dans les doublons du geofla
datafusion <- merge(dataf, mais2019 ["ID_CAN", "Surface", drop = TRUE], by = "ID_CANTON")
# aucun des cantons de la data questionnaire dans les doublons du geofla
datafusion <- merge(dataf, mais2019 ["ID_CAN", "Surface", drop = TRUE], by = "ID_CAN")
str(dataf)
# attribut code canton = num dpt + num canton a l'air commun
# Mais attention pas identifiant unique !
#205 obs
str(mais2019)
str(dataf)
# aucun des cantons de la data questionnaire dans les doublons du geofla
datafusion <- merge(dataf, mais2019 [, c("ID_CAN", "Surface"), drop = TRUE], by = "ID_CAN")
# 64 sur 125 !
mar(mfrow = c(1,2))
# 64 sur 125 !
par(mfrow = c(1,2))
plot(dataf$geometry)
plot(mais2019$geom)
mais2019
mais2019  <- st_read("../dataS/rpg.gpkg", "dataFinale", quiet = TRUE, stringsAsFactors = FALSE)
mais2019
mais2019$NOM_REG
table(mais2019$NOM_REG)
mais2019 <- mais2019 [!(is.na(mais2019$MID))||mais2019$NOM_REG %in% c("AQUITAINE","MIDI-PYRENEES") , c("ID_GEOFLA", "Code_canto" ,"MID")]
mais2019 <- mais2019 [!(is.na(mais2019$MID))&mais2019$NOM_REG %in% c("AQUITAINE","MIDI-PYRENEES") , c("ID_GEOFLA", "Code_canto" ,"MID")]
mais2019 <- mais2019 [!(is.na(mais2019$MID)) & mais2019$NOM_REG %in% c("AQUITAINE","MIDI-PYRENEES") , c("ID_GEOFLA", "Code_canto" "NOM_REG","MID")]
mais2019 <- mais2019 [!(is.na(mais2019$MID)) & mais2019$NOM_REG %in% c("AQUITAINE","MIDI-PYRENEES") , c("ID_GEOFLA", "Code_canto", "NOM_REG","MID")]
mais2019 <- mais2019 [!(is.na(mais2019$MID)) & mais2019$NOM_REG %in% c("AQUITAINE","MIDI-PYRENEES") ,
c("ID_GEOFLA", "Code_canto", "NOM_REG","MID")]
mais2019 <- mais2019 [mais2019$NOM_REG %in% c("AQUITAINE","MIDI-PYRENEES"),]
mais2019 <- mais2019 [!(is.na(mais2019$MID))  ,
c("ID_GEOFLA", "Code_canto", "NOM_REG","MID")]
mais2019 <- mais2019 [!(is.na(mais2019$MID))  ,
c("ID_GEOFLA", "Code_canto","MID")]
names(mais2019) [1:3] <- c("ID_GEOFLA","ID_CAN", "Surface")
# attribut code canton = num dpt + num canton a l'air commun
# Mais attention pas identifiant unique !
#205 obs
str(mais2019)
mais2019  <- st_read("../dataS/rpg.gpkg", "dataFinale", quiet = TRUE, stringsAsFactors = FALSE)
mais2019 <- mais2019 [mais2019$NOM_REG %in% c("AQUITAINE","MIDI-PYRENEES"),]
mais2019 <- mais2019 [!(is.na(mais2019$MID))  ,
c("ID_GEOFLA", "Code_canto","MID")]
names(mais2019) [1:3] <- c("ID_GEOFLA","ID_CAN", "Surface")
# attribut code canton = num dpt + num canton a l'air commun
# Mais attention pas identifiant unique !
#205 obs
str(mais2019)
tab <- table(mais2019$ID_CANTON)
doublons <- tab [tab >1]
# Numéro unique pour le data questionnaire
length(unique(dataf$ID_CAN))
# aucun des cantons de la data questionnaire dans les doublons du geofla
datafusion <- merge(dataf, mais2019 [, c("ID_CAN", "Surface"), drop = TRUE], by = "ID_CAN")
# 64 sur 65 !
setdiff(datafusion$NOM_CAN, dataf$NOM_CAN)
dataf$NOM_CAN
datafusion
length(unique(datafusion$ID_CAN))
table(datafusion$ID_CAN)
mais2019  <- st_read("../dataS/rpg.gpkg", "dataFinale", quiet = TRUE, stringsAsFactors = FALSE)
mais2019 <- mais2019 [mais2019$NOM_REG %in% c("AQUITAINE","MIDI-PYRENEES"),]
# attribut code canton = num dpt + num canton a l'air commun
# identifiant unique pour les cantons des deux régions
# 82 obs
str(mais2019)
# On garde le chef lieu pour identifier
names(mais2019) [1:3] <- c("ID_GEOFLA","ID_CAN", "NOM_CHF", "Surface")
# On garde le chef lieu pour identifier
names(mais2019) [1:4] <- c("ID_GEOFLA","ID_CAN", "NOM_CHF", "Surface")
mais2019 <- mais2019 [mais2019$NOM_REG %in% c("AQUITAINE","MIDI-PYRENEES"),]
mais2019 <- mais2019 [!(is.na(mais2019$MID))  ,
c("ID_GEOFLA", "Code_canto", "NOM_CHF","MID")]
mais2019  <- st_read("../dataS/rpg.gpkg", "dataFinale", quiet = TRUE, stringsAsFactors = FALSE)
mais2019 <- mais2019 [mais2019$NOM_REG %in% c("AQUITAINE","MIDI-PYRENEES"),]
mais2019  <- st_read("../dataS/rpg.gpkg", "dataFinale", quiet = TRUE, stringsAsFactors = FALSE)
mais2019 <- mais2019 [mais2019$NOM_REG %in% c("AQUITAINE","MIDI-PYRENEES"),]
mais2019 <- mais2019 [!(is.na(mais2019$MID))  ,
c("ID_GEOFLA", "Code_canto", "NOM_CHF","MID")]
# On garde le chef lieu pour identifier
# 82 obs
names(mais2019) [1:4] <- c("ID_GEOFLA","ID_CAN", "NOM_CHF", "Surface")
tab <- table(mais2019$ID_CANTON)
doublons <- tab [tab >1]
doub <- names(doublons)
tab <- table(mais2019$ID_CAN)
names(tab)[tab>1]
indice <- names(tab)[tab>1]
doub <- names(tab)[tab>1]
data$ID_CAN [data$ID_CAN %in% doub,]
# aucun des cantons de la data questionnaire dans les doublons du geofla
datafusion <- merge(dataf, mais2019 [, c("ID_CAN", "NOM_CHF", "Surface"), drop = TRUE], by = "ID_CAN")
# 64 sur 125 !
setdiff(datafusion$NOM_CAN, dataf$NOM_CAN)
# 64 sur 125 !
str(datafusion)
setdiff(dataf$NOM_CAN, datafusion$NOM_CAN)
table(datafusion$ID_CAN)
doub
doub <- as.integer(doub)
doub
data$ID_CAN [data$ID_CAN %in% doub,]
# 6 doublons
# Numéro unique pour le data questionnaire
length(unique(dataf$ID_CAN))
data$ID_CAN [data$ID_CAN %in% doub,]
dataf$ID_CAN [dataf$ID_CAN %in% doub,]
dataf$ID_CAN [dataf$ID_CAN %in% doub,]
str(dataf)
doub <- names(tab)[tab>1]
doub
dataf$ID_CAN [dataf$ID_CAN %in% doub,]
dataf$ID_CAN [dataf$ID_CAN %in% doub, , drop= F]
dataf [dataf$ID_CAN %in% doub,]
doublons <- dataf [dataf$ID_CAN %in% doub,]
doub
# 6 des cantons de la data questionnaire sont dans les doublons du geofla
pb <- mais2019 [mais2019$ID_CAN %in% doub,]
plot(pb$geom)
pbQuest <- dataf [dataf$ID_CAN %in% doub,]
plot(pbQuest$geometry)
pb
labelLayer(pb, txt = "ID_CAN", add = TRUE)
plot(pb$geom)
labelLayer(pb, txt = "ID_CAN")
pbQuest <- dataf [dataf$ID_CAN %in% doub,]
labelLayer(pbQuest, txt = "ID_CAN", add = TRUE)
plot(pb$geom)
plot(pb$geom)
labelLayer(pb, txt = "ID_CAN")
pbQuest <- dataf [dataf$ID_CAN %in% doub,]
plot(pbQuest$geometry)
labelLayer(pbQuest, txt = "ID_CAN", add = TRUE)
plot(pb$geom)
labelLayer(pb, txt = "ID_CAN")
layoutLayer("Geofla", add = TRUE)
layoutLayer("Geofla")
pbQuest <- dataf [dataf$ID_CAN %in% doub,]
plot(pbQuest$geometry)
labelLayer(pbQuest, txt = "ID_CAN", add = TRUE)
layoutLayer("Opendata")
# 6 des cantons de la data questionnaire sont dans les doublons du geofla
png("../img/doublons.png")
pbGeofla <- mais2019 [mais2019$ID_CAN %in% doub,]
plot(pb$geom)
labelLayer(pb, txt = "ID_CAN")
layoutLayer("Geofla")
pbQuest <- dataf [dataf$ID_CAN %in% doub,]
plot(pbQuest$geometry)
labelLayer(pbQuest, txt = "ID_CAN", add = TRUE)
layoutLayer("Opendata")
dev.off()
par(mfrow = c(1,2))
pbGeofla <- mais2019 [mais2019$ID_CAN %in% doub,]
# 6 des cantons de la data questionnaire sont dans les doublons du geofla
png("../img/doublons.png")
par(mfrow = c(1,2))
pbGeofla <- mais2019 [mais2019$ID_CAN %in% doub,]
plot(pb$geom)
labelLayer(pb, txt = "ID_CAN")
layoutLayer("Geofla")
pbQuest <- dataf [dataf$ID_CAN %in% doub,]
plot(pbQuest$geometry)
labelLayer(pbQuest, txt = "ID_CAN", add = TRUE)
layoutLayer("Opendata")
dev.off()
# 6 des cantons de la data questionnaire sont dans les doublons du geofla
png("../img/doublons.png")
par(mfrow = c(1,2), mar =c(0,0,1.2,0))
pbGeofla <- mais2019 [mais2019$ID_CAN %in% doub,]
plot(pb$geom)
labelLayer(pb, txt = "ID_CAN")
layoutLayer("Geofla")
pbQuest <- dataf [dataf$ID_CAN %in% doub,]
plot(pbQuest$geometry)
labelLayer(pbQuest, txt = "ID_CAN", add = TRUE)
layoutLayer("Opendata")
dev.off()
# pb doublons !
datafusion [datafusion$ID_CAN %in% doub,]
# pb doublons !
datafusion [datafusion$ID_CAN %in% doub, c("ID_CAN", "CANTON", "SURFACE", "surface")]
# pb doublons !
datafusion [datafusion$ID_CAN %in% doub, c("ID_CAN", "CANTON", "SURFACE", "surface"), drop = F]
# pb doublons !
str(datafusion)
datapb [datafusion$ID_CAN %in% doub, c("ID_CAN", "CANTON", "SURFACE", "Surface"), drop = F]
datafusion [datafusion$ID_CAN %in% doub, c("ID_CAN", "CANTON", "SURFACE", "Surface"), drop = F]
pb <- datafusion [datafusion$ID_CAN %in% doub, c("ID_CAN", "CANTON", "SURFACE", "Surface"), drop = F]
names(pb)[1:4] <- c("ID_CAN", "CANTON", "Mais tendre", "Mais doux")
pb
names(pb)[1:4] <- c("ID_CAN", "CANTON", "Mais tendre (Questionnaire)", "Mais doux (rpg 2019)")
pb
pb <- datafusion [datafusion$ID_CAN %in% doub, c("ID_CAN", "CANTON", "SURFACE", "Surface"), drop = T]
names(pb)[1:4] <- c("ID_CAN", "CANTON", "Mais tendre (Questionnaire)", "Mais doux (rpg 2019)")
pb
names(pb)[1:4] <- c("ID_CAN", "CANTON", "Mais semence (Questionnaire)", "Mais doux (rpg 2019)")
pb
