---
title: "larves"
output: 
 html_document: 
  number_sections: yes
  toc: yes
editor_options: 
 chunk_output_type: console
#fig_width: 6 
#fig_height: 4
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache = TRUE)
# Passer la valeur suivante à TRUE pour reproduire les extractions.
knitr::opts_chunk$set(eval = TRUE)
knitr::opts_chunk$set(warning = FALSE)
#knitr::opts_chunk$set(fig.width=12, fig.height=8) 
```
```{r}
library(sf)
library(cartography)
library(RColorBrewer)
library(mapview)
```


# Données

```{r}
larves <- read.csv("../dataE/02_POI/larves.csv")
str(larves)
com <- st_read("../dataE/00_ADMIN/COMMUNE.shp")
str(com)
```

# Jointures attributaires

```{r}
str(com)
str(larves)
com$codenum <- as.integer(com$INSEE_COM)
joint  <- merge(com, larves, all.y = TRUE, by.x = "codenum", by.y = "CODE.INSEE")
(pb <- joint [is.na(joint$NOM_COM),])
joint <- joint [!is.na(joint$NOM_COM),]
str(pb)
pb <- pb [pb$lat!="",]
pb <- pb [,c("COMMUNE", "lat", "long"), drop = TRUE]
pb <- unique (pb)
```

recherche des deux communes avec grep
spatialisation du fichier

```{r}
com [com$NOM_COM == "Bisseuil",]
com [grep ("seuil", com$NOM_COM),]
pb$lat <- gsub(",", ".",pb$lat) 
pb$long <- gsub (",",".", pb$long)
pbst <- st_as_sf(pb, coords = c("long","lat"), crs = 4326)
pbst <- st_transform(pbst, crs = 2154)
class(pbst)
plot(pbst$geometry)
# il manque deux communes Mareuil et Bisseuil, on les spatialise à partir du fichier
# Elles sont dans AY-CHAMPAGNE
mapview(pbst)
voisin <- com [com$INSEE_REG == 44,]
zone <- st_within (pbst, voisin, sparse = T)
voisin
plot (voisin$geometry [222], col = NA)
plot(pbst$geom, add = TRUE)
labelLayer(pbst, txt = "COMMUNE", show.lines = TRUE)
labelLayer(voisin[222,], txt = "NOM_COM")
```

jointure pbst et les data
```{r}
str (pbst)
str(larves)
joinb <- merge(pbst, larves, by.x = "COMMUNE", by.y = "COMMUNE")
names(joinb) [1:2] <- c("NOM_COM", "INSEE_COM")
# prep des deux tables de jointures
colonnes <- c("NOM_COM", "INSEE_COM","data", "annee", "theme")
joinb <- joinb [, colonnes]
joint <- st_centroid(joint [,colonnes])
joinf <- rbind(joinb,joint)
joinf
```

data : passer en chiffre

```{r}
joinf$data <- gsub (" %", "",joinf$data)
joinf$data <- gsub(",", ".", joinf$data)
joinf$data <- as.numeric(joinf$data)
joinf
# 273 ok
st_write(joinf, "../dataS/larves.gpkg", "larves", delete_layer = T)
```




